<?xml version="1.0" encoding="UTF-8"?><process version="9.10.008">
  <context>
    <input/>
    <output/>
    <macros/>
  </context>
  <operator activated="true" class="process" compatibility="9.10.008" expanded="true" name="Process">
    <parameter key="logverbosity" value="init"/>
    <parameter key="random_seed" value="2001"/>
    <parameter key="send_mail" value="never"/>
    <parameter key="notification_email" value=""/>
    <parameter key="process_duration_for_mail" value="30"/>
    <parameter key="encoding" value="SYSTEM"/>
    <process expanded="true">
      <operator activated="true" class="retrieve" compatibility="9.10.008" expanded="true" height="68" name="Retrieve" width="90" x="112" y="136">
        <parameter key="repository_entry" value="../../Data/Task 1 Exploration- Tableau Part/Freq_comb_single_Chinese_item"/>
      </operator>
      <operator activated="true" class="retrieve" compatibility="9.10.008" expanded="true" height="68" name="Retrieve (2)" width="90" x="112" y="34">
        <parameter key="repository_entry" value="../../Data/Task 1 Exploration- Tableau Part/Freq_comb_single_Chinese_rul"/>
      </operator>
      <operator activated="true" class="converters:rules_2_example_set" compatibility="0.9.000" expanded="true" height="103" name="Association Rules to ExampleSet" width="90" x="380" y="34"/>
      <operator activated="false" class="filter_examples" compatibility="9.10.008" expanded="true" height="103" name="Filter Examples" width="90" x="447" y="289">
        <parameter key="parameter_expression" value=""/>
        <parameter key="condition_class" value="custom_filters"/>
        <parameter key="invert_filter" value="false"/>
        <list key="filters_list"/>
        <parameter key="filters_logic_and" value="true"/>
        <parameter key="filters_check_metadata" value="true"/>
      </operator>
      <operator activated="false" class="execute_script" compatibility="9.10.008" expanded="true" height="68" name="Execute Script" width="90" x="313" y="442">
        <parameter key="script" value="/* &#10; * You can use both Java and Groovy syntax in this script.&#10; * &#10; * Note that you have access to the following two predefined variables:&#10; * 1) input (an array of all input data)&#10; * 2) operator (the operator instance which is running this script)&#10; */&#10;&#10;// Take first input data and treat it as generic IOObject&#10;// Alternatively, you could treat it as an ExampleSet if it is one:&#10;// ExampleSet inputData = input[0];&#10;AssociationRules rules = input[0];&#10;&#10;&#10;&#10;// construct attribute set&#10;Attribute[] attributes= new Attribute[11];&#10;attributes[0] = AttributeFactory.createAttribute(&quot;Premise&quot;, Ontology.STRING);&#10;&#10;attributes[1] = AttributeFactory.createAttribute(&quot;Premise Items&quot;, Ontology.INTEGER);&#10;attributes[2] = AttributeFactory.createAttribute(&quot;Conclusion&quot;, Ontology.STRING);&#10;attributes[3] = AttributeFactory.createAttribute(&quot;Conclusion Items&quot;, Ontology.INTEGER);&#10;attributes[4] = AttributeFactory.createAttribute(&quot;Confidence&quot;, Ontology.REAL);&#10;attributes[5] = AttributeFactory.createAttribute(&quot;Conviction&quot;, Ontology.REAL);&#10;attributes[6] = AttributeFactory.createAttribute(&quot;Gain&quot;, Ontology.REAL);&#10;attributes[7] = AttributeFactory.createAttribute(&quot;Laplace&quot;, Ontology.REAL);&#10;&#10;attributes[8] = AttributeFactory.createAttribute(&quot;Lift&quot;, Ontology.REAL);&#10;attributes[9] = AttributeFactory.createAttribute(&quot;Ps&quot;, Ontology.REAL);&#10;&#10;&#10;attributes[10] = AttributeFactory.createAttribute(&quot;Total Support&quot;, Ontology.REAL);&#10;&#10;&#10;&#10;MemoryExampleTable table = new MemoryExampleTable(attributes);&#10;DataRowFactory ROW_FACTORY = new DataRowFactory(0);&#10;&#10;String[] strings= new String[11];&#10;&#10;for (AssociationRule rule : rules) {&#10;&#9;&#9;// construct example data&#10;        strings[0]=rule.toPremiseString();&#10;        strings[1]=rule.premise.size().toString();&#10;        strings[2]=rule.toConclusionString();&#10;        strings[3]=rule.conclusion.size().toString();&#10;        strings[4]=rule.getConfidence().toString();&#10;        strings[5]=rule.getConviction().toString();&#10;        strings[6]=rule.getGain().toString();&#10;        strings[7]=rule.getLaplace().toString();&#10;        strings[8]=rule.getLift().toString();&#10;&#10;        strings[9]=rule.getPs().toString();&#10;        strings[10]=rule.getTotalSupport().toString();&#10;&#10;        // make and add row&#10;        DataRow row = ROW_FACTORY.create(strings, attributes); &#10;        table.addDataRow(row);&#9;&#10;&#9;&#9;}&#10;&#10;ExampleSet exampleSet = table.createExampleSet();&#10;return exampleSet;&#10;&#10;&#10;// You can add any code here&#10;&#10;&#10;// This line returns the first input as the first output&#10;return inputData;"/>
        <parameter key="standard_imports" value="true"/>
      </operator>
      <operator activated="true" class="generate_attributes" compatibility="9.10.008" expanded="true" height="82" name="Generate Attributes" width="90" x="514" y="34">
        <list key="function_descriptions">
          <parameter key="cuisine" value="&quot;(chinese)&quot;"/>
          <parameter key="Freq. Combination Items (Single)" value="Conclusion+&quot;_&quot;+Premises"/>
          <parameter key="Freq. Combination Amount (Single)" value="1"/>
        </list>
        <parameter key="keep_all" value="true"/>
      </operator>
      <operator activated="true" class="select_attributes" compatibility="9.10.008" expanded="true" height="82" name="Select Attributes" width="90" x="648" y="34">
        <parameter key="attribute_filter_type" value="subset"/>
        <parameter key="attribute" value=""/>
        <parameter key="attributes" value="cuisine|Freq. Combination Amount (Single)|Freq. Combination Items (Single)"/>
        <parameter key="use_except_expression" value="false"/>
        <parameter key="value_type" value="attribute_value"/>
        <parameter key="use_value_type_exception" value="false"/>
        <parameter key="except_value_type" value="time"/>
        <parameter key="block_type" value="attribute_block"/>
        <parameter key="use_block_type_exception" value="false"/>
        <parameter key="except_block_type" value="value_matrix_row_start"/>
        <parameter key="invert_selection" value="false"/>
        <parameter key="include_special_attributes" value="false"/>
      </operator>
      <connect from_op="Retrieve" from_port="output" to_op="Association Rules to ExampleSet" to_port="itemset input"/>
      <connect from_op="Retrieve (2)" from_port="output" to_op="Association Rules to ExampleSet" to_port="rules input"/>
      <connect from_op="Association Rules to ExampleSet" from_port="example set" to_op="Generate Attributes" to_port="example set input"/>
      <connect from_op="Generate Attributes" from_port="example set output" to_op="Select Attributes" to_port="example set input"/>
      <connect from_op="Select Attributes" from_port="example set output" to_port="result 1"/>
      <portSpacing port="source_input 1" spacing="0"/>
      <portSpacing port="sink_result 1" spacing="0"/>
      <portSpacing port="sink_result 2" spacing="0"/>
    </process>
  </operator>
</process>
